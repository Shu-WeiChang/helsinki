{"version":3,"sources":["App.js","index.js"],"names":["require","config","Weather","weather","temp","feels_like","temp_min","CountryShow","countries","handleShow","name","onClick","CountryDetail","capital","population","languages","map","language","src","flag","alt","width","height","InputField","label","value","onChange","Country","length","country","App","useState","setCountries","query","setQuery","setWeather","useEffect","axios","get","then","response","searchResult","data","filter","toLowerCase","includes","main","console","log","event","target","countryName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAEAA,EAAQ,IAAUC,SAElB,IAAMC,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACE,8BACE,+BACE,6BAAKA,EAAQC,OACb,6BAAKD,EAAQE,aACb,6BAAKF,EAAQG,iBAMfC,EAAc,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAChC,OACE,gCACE,+BAAOD,EAAUE,OACjB,wBAAQC,QAAS,kBAAKF,EAAWD,EAAUE,OAA3C,sBAOAE,EAAgB,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UACvB,OACE,gCACE,6BAAKA,EAAUE,OACf,+BAAOF,EAAUK,UAAe,uBAChC,+BAAOL,EAAUM,aACjB,2CACCN,EAAUO,UAAUC,KAAI,SAAAC,GAAQ,OAC/B,6BAAyBA,EAASP,MAAzBO,EAASP,SAEpB,qBAAKQ,IAAKV,EAAUW,KAAMC,IAAI,GAAGC,MAAM,QAAQC,OAAO,cAKtDC,EAAa,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClC,OACE,gCACE,gCAAQF,IACR,uBAAOC,MAAOA,EAAOC,SAAUA,QAK/BC,EAAU,SAAC,GAAwC,IAAtCnB,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,WAAYN,EAAc,EAAdA,QACxC,OAAIK,EAAUoB,OAAS,IAAMpB,EAAUoB,OAAS,EAE5C,8BACGpB,EAAUQ,KAAI,SAAAa,GAAO,OAAI,cAAC,EAAD,CAAgCrB,UAAWqB,EAASpB,WAAYA,GAA9CoB,EAAQnB,WAG/CF,EAAUoB,OAAS,GAE1B,6CAE4B,IAArBpB,EAAUoB,OAEjB,gCACGpB,EAAUQ,KAAI,SAAAa,GAAO,OACpB,cAAC,EAAD,CAAkCrB,UAAWqB,GAAzBA,EAAQnB,SAE9B,cAAC,EAAD,CAASP,QAASA,OAIf,8BA8DI2B,EA1DH,WACV,MAAoCC,mBAAS,IAA7C,mBAAQvB,EAAR,KAAmBwB,EAAnB,KACA,EAA4BD,mBAAS,IAArC,mBAAQE,EAAR,KAAeC,EAAf,KACA,EAAgCH,mBAAS,IAAzC,mBAAQ5B,EAAR,KAAiBgC,EAAjB,KAEAC,qBAAU,WACRC,IACGC,IAAI,wCAAwCC,MAAK,SAAAC,GAClD,GAAc,KAAVP,EAAc,CAChB,IAAMQ,EAAeD,EAASE,KAAKC,QAAO,SAAAd,GAAO,OAC/CA,EAAQnB,KAAKkC,cAAcC,SAASZ,EAAMW,kBAE5CZ,EAAaS,SAGhB,CAACR,IAEJG,qBAAU,WAGR,GAAyB,IAArB5B,EAAUoB,OAAc,CAC1B,IAAMf,EAAUL,EAAUQ,KAAI,SAAAa,GAAO,OAAIA,EAAQhB,WAC7CA,EAAQ,IACVwB,IACCC,IADD,2DACyDzB,EAAQ,GADjE,4CAC8G0B,MAAK,SAAAC,GACjHL,EAAWK,EAASE,KAAKI,YAI9B,CAACtC,IAEJuC,QAAQC,IAAI7C,GACZ4C,QAAQC,IAAIxC,GAUZ,OACE,gCACE,8BACE,cAAC,EAAD,CACEgB,MAAM,iBACNC,MAAOQ,EACPP,SAda,SAACuB,GACpBf,EAASe,EAAMC,OAAOzB,YAgBpB,8BACE,cAAC,EAAD,CAASjB,UAAWA,EAAWC,WAdlB,SAAC0C,GAClBjB,EAASiB,IAakDhD,QAASA,UC1HxEiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb2b04cb.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nrequire(\"dotenv\").config();\n\nconst Weather = ({ weather }) => {\n  return (\n    <div>\n      <ul>\n        <li>{weather.temp}</li>\n        <li>{weather.feels_like}</li>\n        <li>{weather.temp_min}</li>\n      </ul>\n    </div>\n  )\n}\n\nconst CountryShow = ({ countries, handleShow }) => {\n  return (\n    <div>\n      <span>{countries.name}</span>\n      <button onClick={()=> handleShow(countries.name)}>\n        Show\n      </button>\n    </div>\n  )\n}\n\nconst CountryDetail = ({ countries }) => {\n  return (\n    <div>\n      <h1>{countries.name}</h1>\n      <span>{countries.capital}</span><br/>\n      <span>{countries.population}</span>\n      <h2>languages</h2>\n      {countries.languages.map(language =>\n        <li key={language.name}>{language.name}</li>\n      )}\n      <img src={countries.flag} alt=\"\" width=\"100px\" height=\"100px\"></img>\n    </div>\n  )\n}\n\nconst InputField = ({ label, value, onChange }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input value={value} onChange={onChange} />\n    </div>\n  )\n}\n\nconst Country = ({ countries, handleShow, weather }) => {\n  if (countries.length < 10 && countries.length > 1) {\n    return (\n      <div>\n        {countries.map(country => <CountryShow key={country.name} countries={country} handleShow={handleShow} /> )}\n      </div>\n    )\n  } else if (countries.length > 10) {\n    return (\n      <span>Too many.</span>\n    )\n  } else if (countries.length === 1) {\n    return (\n      <div>\n        {countries.map(country =>\n          <CountryDetail key={country.name} countries={country} />\n        )}\n        <Weather weather={weather} />\n      </div>\n    )\n  } else {\n    return <></>\n  }\n};\n\nconst App = () => {\n  const [ countries, setCountries ] = useState([]);\n  const [ query, setQuery ] = useState(\"\");\n  const [ weather, setWeather ] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      if (query !== \"\") {\n        const searchResult = response.data.filter(country => \n          country.name.toLowerCase().includes(query.toLowerCase())\n        );\n        setCountries(searchResult);\n      }\n    });\n  }, [query])\n\n  useEffect(() => {\n    // const KEY = process.env.API;\n    // console.log(KEY)\n    if (countries.length === 1) {\n      const capital = countries.map(country => country.capital);\n      if (capital[0]) {\n        axios\n        .get(`http://api.openweathermap.org/data/2.5/weather?q=${capital[0]}&appid=ad13301f82e57a4a7d39ec135e991f8b`).then(response => {\n          setWeather(response.data.main)\n        })\n      }\n    }\n  }, [countries]);\n  \n  console.log(weather)\n  console.log(countries)\n\n  const handleChange = (event) => {\n    setQuery(event.target.value)\n  };\n\n  const handleShow = (countryName) => {\n    setQuery(countryName);\n  };\n\n  return (\n    <div>\n      <div>\n        <InputField\n          label=\"Find countries\"\n          value={query}\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <Country countries={countries} handleShow={handleShow} weather={weather}  />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}